{"version":3,"sources":["componentns/CountrySelection.js","componentns/icons/WeatherIcons.js","componentns/LogoCard.js","componentns/WeatherData.js","App.js","helpers/EmptyObject.js","index.js"],"names":["props","className","onSubmit","handleSubmit","value","city","onChange","handleChange","cities","map","idx","key","type","onClick","Clouds","size","color","Humidity","Temperature","logo","style","width","height","margin","src","alt","LogoCard","tempF","tempC","humidity","windSpeed","App","useState","selectCity","setSelectCity","weatherData","setWeatherData","getData","a","fetch","response","json","ob","windSpeedMPH","weather","CountrySelection","e","preventDefault","find","item","target","obj","length","hasOwnProperty","call","EmptyObject","WeatherData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06097d47.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MDBBtn} from 'mdbreact';\r\n\r\nexport default props => {\r\n    return (\r\n        <div className='input-search-wrapper'>\r\n            <div className='input-search-row'>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <select value={props.city} onChange={props.handleChange}\r\n                            className=\"city-select browser-default custom-select\">\r\n                        <option>Choose City</option>\r\n                        {props.cities.map((city, idx) => <option key={idx} value={city.city}>{city.city}</option>)}\r\n                    </select>\r\n                    <MDBBtn className='get-weather-data' type='submit' onClick={props.handleSubmit}>GET DATA</MDBBtn>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { WiCloudyWindy, WiHumidity, WiThermometer } from 'weather-icons-react';\r\n\r\nexport const Clouds = props => <WiCloudyWindy size={100} color='darkblue' />\r\nexport const Humidity = props => <WiHumidity size={100} color='darkblue' />\r\nexport const Temperature = props => <WiThermometer size={100} color='darkblue' />\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default ({city, logo}) => <div style={{width: 85, height: 85, margin: 5}}>\r\n    <img className=\"card-img-top\"\r\n         src={logo}\r\n         alt={city}\r\n    />\r\n</div>\r\n\r\n","import React from 'react';\r\nimport {Temperature, Humidity, Clouds} from \"./icons/WeatherIcons\";\r\nimport LogoCard from \"./LogoCard\";\r\n\r\nexport default props => {\r\n    return (\r\n        <div className='data-display-wrapper'>\r\n            <div className='data-display-row'>\r\n                <div className='row'>\r\n                    <h2 className='col-10 city-name'>{props.city}</h2>\r\n                    <LogoCard logo={props.logo} city={props.city}/>\r\n                </div>\r\n                <p><Temperature/><span\r\n                    className='data-row'>Temperature: {props.tempF}&#176;F / {props.tempC}&#176;C</span></p>\r\n                <p><Humidity/><span className='data-row'>Relative Humidity: {props.humidity}%</span></p>\r\n                <p><Clouds/><span className='data-row'>Wind Speed: {props.windSpeed} mi/hr</span></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport CountrySelection from \"./componentns/CountrySelection\";\nimport WeatherData from \"./componentns/WeatherData\";\nimport EmptyObject from \"./helpers/EmptyObject\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './App.css';\n\nfunction App() {\n\n\n    const [selectCity, setSelectCity] = useState('');\n    const [weatherData, setWeatherData] = useState({});\n    const cities = [\n        {city: 'Seattle', logo: '/homework-7/static/media/seattle_logo.f1cb8c16.jpg'},\n        {city: 'New York', logo: '../src/assets/logos/new_york_logo.jpg'},\n        {city: 'Chicago', logo: '/homework-7/static/media/chicago_logo.c88eb01a.jpg'},\n        {city: 'Dallas', logo: '/homework-7/static/media/dallas_logo.f2665349.jpg'},\n        {city: 'Miami', logo: '/homework-7/static/media/miami_logo.69c3f098.jpg'},\n        {city: 'Phoenix', logo: '/homework-7/static/media/phoenix_logo.b9cd68bb.jpg'},\n        {city: 'Oklahoma', logo: '/homework-7/static/media/oklahoma_logo.c7b3e852.jpg'},\n        {city: 'Portland', logo: '/homework-7/static/media/portland_logo.d9c61fce.jpg'}\n    ];\n\n    const getData = async (city, logo) => {\n\n        const apiKey = 'HIyat66xz5Uue87sjXrNN';\n        const secret = '7XWB2MGrpconeIvx34PzubV2NkSHRHrBk7Wy4cLV';\n        const response = await fetch(\n            `https://api.aerisapi.com/observations/${city},wa?client_id=${apiKey}&client_secret=${secret}`);\n        const {response: {ob}} = await response.json();\n        await setWeatherData({\n            city: city,\n            logo: logo,\n            tempF: ob.tempF,\n            tempC: ob.tempC,\n            humidity: ob.humidity,\n            windSpeed: ob.windSpeedMPH,\n            weather: ob.weather\n        });\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (selectCity) getData(selectCity, cities.find(item => item.city === selectCity).logo);\n    }\n\n    const handleChange = e => setSelectCity(e.target.value);\n\n    return (\n        <div className=\"app\">\n            <CountrySelection\n                getData={getData}\n                cities={cities}\n                city={selectCity}\n                handleSubmit={handleSubmit}\n                handleChange={handleChange}\n            />\n            {!EmptyObject(weatherData) && <WeatherData {...weatherData}/>}\n        </div>\n    );\n}\n\nexport default App;\n","export default obj => {\r\n    if (obj == null) return true;\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n    if (typeof obj !== \"object\") return true;\r\n    for (let key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n    return true;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}