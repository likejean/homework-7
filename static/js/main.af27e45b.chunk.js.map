{"version":3,"sources":["componentns/CountrySelection.js","componentns/icons/WeatherIcons.js","componentns/WeatherData.js","App.js","helpers/EmptyObject.js","index.js"],"names":["props","className","onSubmit","handleSubmit","value","city","onChange","handleChange","cities","map","idx","key","type","onClick","Sunny","size","color","Humidity","Temperature","tempF","humidity","windSpeed","App","useState","selectCity","setSelectCity","weatherData","setWeatherData","getData","a","fetch","response","json","ob","console","log","windSpeedMPH","weather","CountrySelection","e","preventDefault","target","obj","length","hasOwnProperty","call","EmptyObject","WeatherData","ReactDOM","render","document","getElementById"],"mappings":"4PAGe,WAAAA,GACX,OACI,yBAAKC,UAAU,wBACX,yBAAKA,UAAU,oBACX,0BAAMC,SAAUF,EAAMG,cAClB,4BAAQC,MAAOJ,EAAMK,KAAMC,SAAUN,EAAMO,aAAcN,UAAU,6CAC/D,+CACCD,EAAMQ,OAAOC,KAAI,SAACJ,EAAMK,GAAP,OAAe,4BAAQC,IAAKD,EAAKN,MAAOC,GAAOA,OAErE,kBAAC,IAAD,CAAQJ,UAAU,mBAAmBW,KAAK,SAASC,QAASb,EAAMG,cAAlE,gB,QCTPW,EAAQ,SAAAd,GAAK,OAAI,kBAAC,IAAD,CAAYe,KAAM,IAAKC,MAAM,cAC9CC,EAAW,SAAAjB,GAAK,OAAI,kBAAC,IAAD,CAAYe,KAAM,IAAKC,MAAM,cACjDE,EAAc,SAAAlB,GAAK,OAAI,kBAAC,IAAD,CAAee,KAAM,IAAKC,MAAM,cCFrD,WAAAhB,GACX,OACI,yBAAKC,UAAU,wBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,aAAaD,EAAMK,MACjC,2BAAG,kBAAC,EAAD,MAAc,0BAAMJ,UAAU,YAAhB,gBAAyCD,EAAMmB,MAA/C,UACjB,2BAAG,kBAAC,EAAD,MAAW,0BAAMlB,UAAU,YAAhB,sBAA+CD,EAAMoB,SAArD,MACd,2BAAG,kBAAC,EAAD,MAAQ,0BAAMnB,UAAU,YAAhB,eAAwCD,EAAMqB,UAA9C,iB,wBCiDZC,MAlDf,WAAgB,IAAD,EAG2BC,mBAAS,IAHpC,mBAGHC,EAHG,KAGSC,EAHT,OAI6BF,mBAAS,IAJtC,mBAIHG,EAJG,KAIUC,EAJV,KAOLC,EAAO,uCAAG,WAAMvB,GAAN,mBAAAwB,EAAA,4DAEG,wBACC,2CAHJ,SAIWC,MAAM,wCAAD,OACgBzB,EADhB,yBAFb,wBAEa,0BADZ,6CAHJ,cAIN0B,EAJM,gBAMwBA,EAASC,OANjC,uBAMWC,EANX,EAMAF,SAAWE,GACnBC,QAAQC,IAAIF,GAPJ,UAQFN,EAAe,CACjBtB,KAAMA,EACNc,MAAOc,EAAGd,MACVC,SAAUa,EAAGb,SACbC,UAAWY,EAAGG,aACdC,QAASJ,EAAGI,UAbR,4CAAH,sDA4Bb,OACI,yBAAKpC,UAAU,OACX,6BAAK,2BAAIuB,EAAYE,EAAYW,UACjC,kBAACC,EAAD,CACIV,QAASA,EACTpB,OAnCG,CAAC,UAAW,SAAU,WAAY,UAAW,YAAa,WAAY,YAoCzEH,KAAMmB,EACNrB,aAjBS,SAAAoC,GACjBA,EAAEC,iBACChB,GAAYI,EAAQJ,IAgBfjB,aAbS,SAAAgC,GACjBL,QAAQC,IAAI,IAAKI,EAAEE,OAAOrC,OAC1BqB,EAAcc,EAAEE,OAAOrC,WCzChB,SAAAsC,GACX,GAAW,MAAPA,EAAa,OAAO,EACxB,GAAIA,EAAIC,OAAS,EAAM,OAAO,EAC9B,GAAmB,IAAfD,EAAIC,OAAe,OAAO,EAC9B,GAAmB,kBAARD,EAAkB,OAAO,EACpC,IAAK,IAAI/B,KAAO+B,EACZ,GAAIE,eAAeC,KAAKH,EAAK/B,GAAM,OAAO,EAE9C,OAAO,ED8CGmC,CAAYpB,IAAgB,kBAACqB,EAAgBrB,KEjD3DsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.af27e45b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBBtn } from 'mdbreact';\r\n\r\nexport default props => {\r\n    return (\r\n        <div className='input-search-wrapper'>\r\n            <div className='input-search-row'>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <select value={props.city} onChange={props.handleChange} className=\"city-select browser-default custom-select\">\r\n                        <option>Choose City</option>\r\n                        {props.cities.map((city, idx) => <option key={idx} value={city}>{city}</option>)}\r\n                    </select>\r\n                    <MDBBtn className='get-weather-data' type='submit' onClick={props.handleSubmit}>GET DATA</MDBBtn>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { WiDaySunny, WiHumidity, WiThermometer,  WiCloudy, WiRainMix, WiDayRainMix, WiSnow } from 'weather-icons-react';\r\n\r\nexport const Sunny = props => <WiDaySunny size={100} color='darkblue' />\r\nexport const Humidity = props => <WiHumidity size={100} color='darkblue' />\r\nexport const Temperature = props => <WiThermometer size={150} color='darkblue' />\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Temperature, Humidity, Sunny } from \"./icons/WeatherIcons\";\r\n\r\nexport default props => {\r\n    return (\r\n        <div className='data-display-wrapper'>\r\n            <div className='data-display-row'>\r\n                <h2 className='city-name'>{props.city}</h2>\r\n                <p><Temperature/><span className='data-row'>Temperature: {props.tempF}&#176;F</span></p>\r\n                <p><Humidity/><span className='data-row'>Relative Humidity: {props.humidity}%</span></p>\r\n                <p><Sunny/><span className='data-row'>Wind Speed: {props.windSpeed} miles/hr</span></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport CountrySelection from \"./componentns/CountrySelection\";\nimport WeatherData from \"./componentns/WeatherData\";\nimport EmptyObject from \"./helpers/EmptyObject\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './App.css';\n\nfunction App() {\n\n\n    const [ selectCity, setSelectCity ] = useState('');\n    const [ weatherData, setWeatherData ] = useState({});\n    const cities = ['Seattle', 'Denver', 'New York', 'Chicago', 'Las-Vegas', 'Oklahoma', 'Portland'];\n\n    const getData = async city => {\n\n        const apiKey = 'HIyat66xz5Uue87sjXrNN';\n        const secret =  '7XWB2MGrpconeIvx34PzubV2NkSHRHrBk7Wy4cLV';\n        const response = await fetch(\n            `http://api.aerisapi.com/observations/${city},wa?client_id=${apiKey}&client_secret=${secret}`);\n            const { response: {ob}} = await response.json();\n            console.log(ob);\n            await setWeatherData({\n                city: city,\n                tempF: ob.tempF,\n                humidity: ob.humidity,\n                windSpeed: ob.windSpeedMPH,\n                weather: ob.weather\n            });\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(selectCity) getData(selectCity);\n    }\n\n    const handleChange = e => {\n        console.log('e', e.target.value);\n        setSelectCity(e.target.value);\n    }\n\n    return (\n        <div className=\"app\">\n            <div><p>{selectCity}{weatherData.weather}</p></div>\n            <CountrySelection\n                getData={getData}\n                cities={cities}\n                city={selectCity}\n                handleSubmit={handleSubmit}\n                handleChange={handleChange}\n            />\n            {!EmptyObject(weatherData) && <WeatherData {...weatherData}/>}\n        </div>\n    );\n}\n\nexport default App;\n","export default obj => {\r\n    if (obj == null) return true;\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n    if (typeof obj !== \"object\") return true;\r\n    for (let key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n    return true;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}